x <- c(4, TRUE)
x
class(x0)
class(x)
x <-(1,3,5)
x <-c(1,3,5)
y <-c(3,2,10_)
y <-c(3,2,10)
rbind(x,y)
c(3, "Big")
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2:3
x + y
class(x+y)
x <c(3, 5, 1, 10, 12, 6)
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
?%in%
help(%in%)
help(`%in%`)
hw1_data <- read.csv("~/hw1_data.csv")
View(hw1_data)
mean("Ozone")
help(mean)
help(subset)
temps <- subset("hw1_data.csv", "Month" == 6, Temp)
subset("hw1_data.csv", "Month" = 6)
subset("hw1_data.csv", "Month" == 6)
subset("hw1_data.csv", "Temp")
subset("hw1_data.csv", ,"Temp")
subset("hw1_data.csv", "Month">1,"Temp")
temp <- hw1_data[32:61]
temp <- hw1_data[32:61, "Temp"]
temp
mean(temp)
# complete <- function(directory, id = 1:332) {
#         fileset <- dir(directory, full.names = TRUE) #list of files
#         compset <- data.frame()
#         nobs <- data.frame()
#         spec_data <- data.frame() #empty data frames created
#         for(i in id){
#                 spec_data <- read.csv(fileset[i])
#                 compset <- complete.cases(spec_data)
#                 nobs <- rbind(nobs, c(i, sum(compset)))
#         }
#         colnames(nobs) <- c("id", "nobs")
#         nobs
# }
#
# Everycase <- complete("specdata")
corr <- function(directory, threshold = 0) {
complete <- function(directory, id = 1:332) {
fileset <- dir(directory, full.names = TRUE) #list of files
compset <- data.frame()
nobs <- data.frame()
spec_data <- data.frame() #empty data frames created
for(i in id){
spec_data <- read.csv(fileset[i])
compset <- complete.cases(spec_data)
nobs <- rbind(nobs, c(i, sum(compset)))
}
colnames(nobs) <- c("id", "nobs")
nobs
}
Everycase <- complete("specdata")
spec_data <- data.frame() #empty data frames created
approvedcase <- subset(Everycase[,1], Everycase[, 2] > threshold)
for(i in approvedcase){
spec_data <- rbind(spec_data, read.csv(fileset[i]))
cor(spec_data)
}
setwd(R/R_course_week2)
library("swirl")
swirl()
q90
q()
library("swirl")
swirl()
x
x[1:10]
x[is.na(x)]
y <- [!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
name(foo, bar, norf)
vect <- name(foo, bar, norf)
name(vect)
/name
?name
names(vect)
vect2 <- c(11, 2, NA)
names(vect2 <- c("foo", "bar", "norf"))
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <-c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatrix2 <- matrix(1:20,4,5)
identical(myMatrix, myMatrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, mymatrix)
cbind(patients, myMatrix)
myData <- data.frame(patents, myMatrix)
myData <- data.frame(patients, myMatrix)
myd=data
myData
class(myData)
cnames <- c("patient", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(myData) <- cnames
myData
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(c(y,z), 100)
myNA <- is.na(myData)
myNA
mydata == NA
myData == NA
sum(myNA)
myData
0/0
Ind - Inf
Inf - Inf
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
setwd("R/r_course_week2")
submit()
corr("specdata", 150)
cr < -corr("specdata", 150)
cr <- corr("specdata", 150)
head(cr)
Everycase <- complete("specdata")
complete("specdata")
fileset <- dir("specdata", full.names = TRUE) #list of files
for (i in length(fileset)) {
rawData <- data.frame()
rawData <- rbind(rawData, read.csv(fileset[i]))
cleanData <- na.omit(rawData)
}
head(cleanData)
nrow(cleanData)
corr("specdata", 150)
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 150)
head(cr)
View(cleanData)
corr <- function(directory, threshold = 0) {
corrv <- vector("numeric")
rawData <- data.frame()
fileset <- dir(directory, full.names = TRUE) #list of files
for (i in 1:length(fileset)) {
rawData <- rbind(rawData, read.csv(fileset[i])) #set of raw data for the correlation
cleanData <- na.omit(rawData) #process to remove NA values
count <- nrow(cleanData) #count of each file when NA cleaned out
if(count>threashold) {
corrv <- append(corrv, cor(cleanData$sulfate, cleanData$nitrate))
} #function to calculate the correlation when the number of rows is greater than the threashold
} corrv
}
View(rawData)
corr <- function("specdata", threshold = 0) {
corrv <- vector("numeric")
rawData <- data.frame()
fileset <- dir(directory, full.names = TRUE) #list of files
for (i in 1:length(fileset)) {
rawData <- rbind(rawData, read.csv(fileset[i])) #set of raw data for the correlation
cleanData <- na.omit(rawData) #process to remove NA values
count <- nrow(cleanData) #count of each file when NA cleaned out
if(count>threashold) {
corrv <- append(corrv, cor(cleanData$sulfate, cleanData$nitrate))
} #function to calculate the correlation when the number of rows is greater than the threashold
} corrv
}
corr <- function(directory, threshold = 0) {
corrv <- vector("numeric")
rawData <- data.frame()
fileset <- dir(directory, full.names = TRUE) #list of files
for (i in 1:length(fileset)) {
rawData <- rbind(rawData, read.csv(fileset[i])) #set of raw data for the correlation
cleanData <- na.omit(rawData) #process to remove NA values
count <- nrow(cleanData) #count of each file when NA cleaned out
if(count>threashold) {
corrv <- append(corrv, cor(cleanData$sulfate, cleanData$nitrate))
} #function to calculate the correlation when the number of rows is greater than the threashold
} corrv
}
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 150)
head(cr)
submit()
submit()
submit()
x <- 1:10
if(x > 5) {
x <- 0
}
z <-10
f(3)
}
z <-10
f(3)
source('~/R/test_training.R', echo=TRUE)
f(3)
